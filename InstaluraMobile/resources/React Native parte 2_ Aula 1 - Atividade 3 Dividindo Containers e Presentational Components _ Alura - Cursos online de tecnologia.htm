<!DOCTYPE html>
<!-- saved from url=(0066)https://cursos.alura.com.br/course/react-native-parte-2/task/35769 -->
<html lang="pt-BR" data-product="alura" class=""><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	
	<meta name="viewport" content="width=device-width, initial-scale=1">

	
		
	<!-- Page hiding snippet (recommended)  -->
	<style>.async-hide { opacity: 0 !important} </style>
	<script type="text/javascript" async="" src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/analytics.js"></script><script async="" id="cio-tracker" data-site-id="fccd7e3d49531457b6b2" src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/track.js"></script><script async="" src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/gtm.js"></script><script>
		(function(a,s,y,n,c,h,i,d,e){s.className+=' '+y;h.start=1*new Date;
        h.end=i=function(){s.className=s.className.replace(RegExp(' ?'+y),'')};
        (a[n]=a[n]||[]).hide=h;setTimeout(function(){i();h.end=null},c);h.timeout=c;
    	})(window,document.documentElement,'async-hide','dataLayer',4000,
        	{'GTM-TN542JN':true});
	</script>

	<!-- Google Tag Manager -->
	<script>
		(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        	new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        	j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
        	'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    	})(window,document,'script','dataLayer', 'GTM-TN542JN');
	</script>
	<!-- End Google Tag Manager -->

	

	<title>React Native parte 2: Aula 1 - Atividade 3 Dividindo Containers e Presentational Components | Alura - Cursos online de tecnologia</title>
	
	<link rel="shortcut icon" href="https://cursos.alura.com.br/images/alura/favicon.ico">
	
	<link href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/css" rel="stylesheet">
	<link rel="preconnect" href="https://fonts.gstatic.com/">
	
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/video-js.bb9a425b.css">
    <link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/video-js-resolutions.d48f855c.css">
    <link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/prettify.4f36b4ca.css">

	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/base.1e88adda.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/formattedText.afb4622e.css">
	
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/container.532971f7.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/classPage.733637d5.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/menuSettings.07358eaf.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/alternativeList.a6131381.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/taskFeedback.1c82537d.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/markdown.c1e23fdd.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/finishSection.7e40d196.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/phrase.6b501fa8.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/hqexplanation.3ed41021.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/openquestion.811813bb.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/textcontent.7298b79f.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/video.7c2303aa.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/singlechoice.4a8caf68.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/music.c02947a9.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/multiplechoice.70f60e4c.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/videodialog.fc98d79c.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/fillintheblank.81cde842.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/speakingpractice.5068bb32.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/pronunciationpractice.7d2876f7.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/repetition.e9ba636b.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/genericVideo.9239c799.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/taskContent.82d3b42f.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/taskButtons.1c232b93.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/markdownEditor.4bc2327a.css">
	<link rel="stylesheet" href="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/audioPlayer.c0ff96e9.css">

	
	
	<style type="text/css">
		.task:before {
			background-color: #FFE000;
		}
	</style>
	
	
	
	</head>
<body cz-shortcut-listen="true">


	
<!-- Google Tag Manager (noscript) -->
<noscript>
	&lt;iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TN542JN"
				  height="0" width="0" style="display:none;visibility:hidden"&gt;&lt;/iframe&gt;
</noscript>
<!-- End Google Tag Manager (noscript) -->



<section class="task" data-task-type="video" data-task-id="35769" data-author-id="46683" data-course-code="react-native-parte-2" data-section-number="1" data-domain="cursos.alura.com.br" data-hasfeedbackanswer="false" data-url-prefix="/">
	<button title="Fechar menu" aria-label="Fechar menu" type="button" class="openMenu-button task-body-button "></button>
	
	<section class="task-body">
		<header class="task-body-header">
			<div class="container">
				<h1 class="task-body-header-title">
					<svg class="task-body-header-title-svg" aria-label="Atividade de Vídeo">
						<use xlink:href="/images/gnarus/classPage/icon-menu-icons.svg#VIDEO"></use>
					</svg>
					<small>03</small>
					<span class="task-body-header-title-text"> Dividindo Containers e Presentational Components</span>
				</h1>
				<div class="task-body-header-actions">
					<a href="https://cursos.alura.com.br/course/react-native-parte-2/task/35769/next" aria-hidden="true" class="task-actions-button task-actions-button-next task-submit">Próxima Atividade</a>
				</div>
			</div>
		</header>
		<main class="task-body-main" data-should-warn="false">
			







	
	
	
	
		







    
    
        <section class="video" id="task-content">
            <div class="container theater-mode">
                




<div class="settings">
	<button type="button" class="settings-button" aria-label="Configurações"></button>
	<div class="settings-box">
		<span class="settings-box-title"></span>
		<ul class="settings-box-list">
			
				
				
					<li class="settings-box-item settings-box-item-player">
						<button class="video-changePlayer" data-uri="https://player.vimeo.com/video/254508113">
							Mudar o Player
							<span hidden="">indisponível</span>
						</button>
					</li>
					
						
							
							
								<li class="settings-box-item settings-box-item-suggestion"><a href="https://cursos.alura.com.br/suggestions/new/react-native-parte-2/35769/question">Sugerir Melhoria</a></li>
							
						
					
				
				
			
			
		</ul>
	</div>
</div>
                



<section id="video" class="video-container">
    
    <div id="video-container-data" class="" data-section-id="5415" data-course="react-native-parte-2" data-playback-rate="1.2" data-task-id="35769" data-quality="hd" data-course-id="687" data-gnarus-name="alura">

        
    <div poster="/images/video/vinheta-alura.png" preload="auto" class="video-js vjs-default-skin video-player-frame video-player vjs-controls-enabled vjs-has-started vjs-fullscreen vjs-user-active vjs-paused" id="video-player-frame" style="width: 300px; height: 150px;"><video id="video-player-frame_html5_api" class="vjs-tech" preload="auto" poster="/images/video/vinheta-alura.png" src="https://player.vimeo.com/play/928842223?s=254508113_1523680751_ce9c6ea1d0d3d7d25bff3d30fcdff5a8&amp;loc=external&amp;context=Vimeo%5CController%5CApi%5CResources%5CVideoController.&amp;download=1&amp;filename=687-reactnative-video1.3-Dividindo%2BContainers%2Be%2BPresentational%2BComponents-screen174.mp4"><source type="video/mp4" src="https://player.vimeo.com/play/928842223?s=254508113_1523680751_ce9c6ea1d0d3d7d25bff3d30fcdff5a8&amp;loc=external&amp;context=Vimeo%5CController%5CApi%5CResources%5CVideoController.&amp;download=1&amp;filename=687-reactnative-video1.3-Dividindo%2BContainers%2Be%2BPresentational%2BComponents-screen174.mp4" data-res="hd"><source type="video/mp4" src="https://player.vimeo.com/play/928842225?s=254508113_1523680751_3e99fe3e011f3b0a29e4f29905cc3efe&amp;loc=external&amp;context=Vimeo%5CController%5CApi%5CResources%5CVideoController.&amp;download=1&amp;filename=687-reactnative-video1.3-Dividindo%2BContainers%2Be%2BPresentational%2BComponents-screen164.mp4" data-res="sd"></video><div></div><div class="vjs-poster" tabindex="-1" style="background-image: url(&quot;/images/video/vinheta-alura.png&quot;);"></div><div class="vjs-loading-spinner"></div><div class="vjs-text-track-display vjs-hidden"></div><div class="vjs-big-play-button" role="button" aria-live="polite" tabindex="0" aria-label="play video"><span aria-hidden="true"></span></div><div class="vjs-control-bar"><div class="vjs-play-control vjs-control  vjs-paused" role="button" aria-live="polite" tabindex="0"><div class="vjs-control-content"><span class="vjs-control-text">Play</span></div></div><div class="vjs-current-time vjs-time-controls vjs-control"><div class="vjs-current-time-display" aria-live="off"><span class="vjs-control-text">Current Time</span> 13:50</div></div><div class="vjs-time-divider"><div><span>/</span></div></div><div class="vjs-duration vjs-time-controls vjs-control"><div class="vjs-duration-display" aria-live="off"><span class="vjs-control-text">Duration Time</span> 15:38</div></div><div class="vjs-remaining-time vjs-time-controls vjs-control"><div class="vjs-remaining-time-display" aria-live="off"><span class="vjs-control-text">Remaining Time</span> -1:48</div></div><div class="vjs-live-controls vjs-control"><div class="vjs-live-display" aria-live="off"><span class="vjs-control-text">Stream Type</span>LIVE</div></div><div class="vjs-progress-control vjs-control"><div role="slider" aria-valuenow="88.45" aria-valuemin="0" aria-valuemax="100" tabindex="0" class="vjs-progress-holder vjs-slider" aria-label="video progress bar" aria-valuetext="13:50"><div class="vjs-load-progress" style="width: 93.0547%;"><span class="vjs-control-text" style="left: 0%; width: 100%;"><span>Loaded</span>: 0%</span></div><div class="vjs-play-progress" style="width: 88.07%;"><span class="vjs-control-text"><span>Progress</span>: 0%</span></div><div class="vjs-seek-handle vjs-slider-handle" aria-live="off" style="left: 87.58%;"><span class="vjs-control-text">13:50</span></div></div></div><div class="vjs-fullscreen-control vjs-control " role="button" aria-live="polite" tabindex="0"><div class="vjs-control-content"><span class="vjs-control-text">Non-Fullscreen</span></div></div><div class="vjs-volume-control vjs-control"><div role="slider" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" tabindex="0" class="vjs-volume-bar vjs-slider" aria-label="volume level" aria-valuetext="100%"><div class="vjs-volume-level"><span class="vjs-control-text"></span></div><div class="vjs-volume-handle vjs-slider-handle"><span class="vjs-control-text">00:00</span></div></div></div><div class="vjs-mute-control vjs-control" role="button" aria-live="polite" tabindex="0"><div><span class="vjs-control-text">Mute</span></div></div><div class="vjs-playback-rate vjs-menu-button vjs-control " role="button" aria-live="polite" tabindex="0" aria-haspopup="true"><div class="vjs-control-content"><span class="vjs-control-text">Playback Rate</span><div class="vjs-menu"><ul class="vjs-menu-content"><li class="vjs-menu-item" role="button" aria-live="polite" tabindex="0" aria-selected="false">2x</li><li class="vjs-menu-item" role="button" aria-live="polite" tabindex="0" aria-selected="false">1.5x</li><li class="vjs-menu-item vjs-selected" role="button" aria-live="polite" tabindex="0" aria-selected="true">1.2x</li><li class="vjs-menu-item" role="button" aria-live="polite" tabindex="0" aria-selected="false">1x</li><li class="vjs-menu-item" role="button" aria-live="polite" tabindex="0" aria-selected="false">0.8x</li><li class="vjs-menu-item" role="button" aria-live="polite" tabindex="0" aria-selected="false">0.7x</li></ul></div></div><div class="vjs-playback-rate-value">1.2x</div></div><div class="vjs-subtitles-button vjs-menu-button vjs-control  vjs-hidden" role="button" aria-live="polite" tabindex="0" aria-haspopup="true" aria-label="Subtitles Menu"><div class="vjs-control-content"><span class="vjs-control-text">Subtitles</span><div class="vjs-menu"><ul class="vjs-menu-content"><li class="vjs-menu-item vjs-selected" role="button" aria-live="polite" tabindex="0" aria-selected="true">subtitles off</li></ul></div></div></div><div class="vjs-captions-button vjs-menu-button vjs-control  vjs-hidden" role="button" aria-live="polite" tabindex="0" aria-haspopup="true" aria-label="Captions Menu"><div class="vjs-control-content"><span class="vjs-control-text">Captions</span><div class="vjs-menu"><ul class="vjs-menu-content"><li class="vjs-menu-item vjs-selected" role="button" aria-live="polite" tabindex="0" aria-selected="true">captions off</li></ul></div></div></div><div class="vjs-chapters-button vjs-menu-button vjs-control  vjs-hidden" role="button" aria-live="polite" tabindex="0" aria-haspopup="true" aria-label="Chapters Menu"><div class="vjs-control-content"><span class="vjs-control-text">Chapters</span><div class="vjs-menu"><ul class="vjs-menu-content"><li class="vjs-menu-title">Chapters</li></ul></div></div></div><div class="vjs-HD-button vjs-control" role="button" aria-live="polite" tabindex="0"><div class="vjs-control-content">HD</div></div></div><div class="vjs-error-display"><div></div></div><div class="vjs-caption-settings vjs-modal-overlay vjs-hidden"><div class="vjs-tracksettings"><div class="vjs-tracksettings-colors"><div class="vjs-fg-color vjs-tracksetting"><label class="vjs-label">Foreground</label><select><option value="">---</option><option value="#FFF">White</option><option value="#000">Black</option><option value="#F00">Red</option><option value="#0F0">Green</option><option value="#00F">Blue</option><option value="#FF0">Yellow</option><option value="#F0F">Magenta</option><option value="#0FF">Cyan</option></select><span class="vjs-text-opacity vjs-opacity"><select><option value="">---</option><option value="1">Opaque</option><option value="0.5">Semi-Opaque</option></select></span></div><div class="vjs-bg-color vjs-tracksetting"><label class="vjs-label">Background</label><select><option value="">---</option><option value="#FFF">White</option><option value="#000">Black</option><option value="#F00">Red</option><option value="#0F0">Green</option><option value="#00F">Blue</option><option value="#FF0">Yellow</option><option value="#F0F">Magenta</option><option value="#0FF">Cyan</option></select><span class="vjs-bg-opacity vjs-opacity"><select><option value="">---</option><option value="1">Opaque</option><option value="0.5">Semi-Transparent</option><option value="0">Transparent</option></select></span></div><div class="window-color vjs-tracksetting"><label class="vjs-label">Window</label><select><option value="">---</option><option value="#FFF">White</option><option value="#000">Black</option><option value="#F00">Red</option><option value="#0F0">Green</option><option value="#00F">Blue</option><option value="#FF0">Yellow</option><option value="#F0F">Magenta</option><option value="#0FF">Cyan</option></select><span class="vjs-window-opacity vjs-opacity"><select><option value="">---</option><option value="1">Opaque</option><option value="0.5">Semi-Transparent</option><option value="0">Transparent</option></select></span></div></div><div class="vjs-tracksettings-font"><div class="vjs-font-percent vjs-tracksetting"><label class="vjs-label">Font Size</label><select><option value="0.50">50%</option><option value="0.75">75%</option><option value="1.00" selected="">100%</option><option value="1.25">125%</option><option value="1.50">150%</option><option value="1.75">175%</option><option value="2.00">200%</option><option value="3.00">300%</option><option value="4.00">400%</option></select></div><div class="vjs-edge-style vjs-tracksetting"><label class="vjs-label">Text Edge Style</label><select><option value="none">None</option><option value="raised">Raised</option><option value="depressed">Depressed</option><option value="uniform">Uniform</option><option value="dropshadow">Dropshadow</option></select></div><div class="vjs-font-family vjs-tracksetting"><label class="vjs-label">Font Family</label><select><option value="">Default</option><option value="monospaceSerif">Monospace Serif</option><option value="proportionalSerif">Proportional Serif</option><option value="monospaceSansSerif">Monospace Sans-Serif</option><option value="proportionalSansSerif">Proportional Sans-Serif</option><option value="casual">Casual</option><option value="script">Script</option><option value="small-caps">Small Caps</option></select></div></div></div><div class="vjs-tracksettings-controls"><button class="vjs-default-button">Defaults</button><button class="vjs-done-button">Done</button></div></div></div></div>
</section>
                
                    
                        <h2 class="video-transcription-title">Transcrição</h2>
                    
                    <section id="transcription" class="video-transcription video-transcription--inactive transcription-toggle">
                        <div class="formattedText">
                                <p>Já vimos como podemos realizar adaptações no nosso programa de acordo com seu comportamento em diferentes plataformas. Nos atentaremos para outra questão importante para o projeto: a qualidade de construção do código. </p>
<p>Ao observarmos o método <code>render()</code>, no arquivo <code>app.js</code>, percebemos que ele acumula responsabilidades e está bem extenso.</p>
<p>No fim do código, temos todos os componentes de estilo que poderiam ser melhor organizados. Como a densidade do código tende a aumentar ao logo do desenvolvimento da aplicação, se não nos atentarmos para a qualidade do código sua manutenção pode se tornar trabalhosa.  </p>
<p>Vejamos toda a parte de código responsável para inserção de novos comentários:</p>
<pre class="prettyprint"><code><span class="pln"> </span><span class="tag">&lt;View</span><span class="pln"> </span><span class="atn">style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">novoComentario</span><span class="pun">}</span><span class="tag">&gt;</span><span class="pln">
            </span><span class="tag">&lt;TextInput</span><span class="pln"> </span><span class="atn">style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">input</span><span class="pun">}</span><span class="pln">
                </span><span class="atn">placeholder</span><span class="pun">=</span><span class="atv">"Adicione um comentário..."</span><span class="pln">
                </span><span class="atn">ref</span><span class="pun">=</span><span class="atv">{input</span><span class="pln"> </span><span class="tag">=&gt;</span><span class="pln"> this.inputComentario = input}
                onChangeText={texto =&gt; this.setState({valorComentario: texto})}
                /&gt;

            </span><span class="tag">&lt;TouchableOpacity</span><span class="pln"> </span><span class="atn">onPress</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">adicionaComentario</span><span class="pun">.</span><span class="pln">bind</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">)}</span><span class="tag">&gt;</span><span class="pln">
              </span><span class="tag">&lt;Image</span><span class="pln"> </span><span class="atn">style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">icone</span><span class="pun">}</span><span class="pln">
                  </span><span class="atn">source</span><span class="pun">=</span><span class="atv">{require('../../resources/img/send.png'</span><span class="pln">)} </span><span class="tag">/&gt;</span><span class="pln">
            </span><span class="tag">&lt;/TouchableOpacity&gt;</span><span class="pln">
          </span><span class="tag">&lt;/View&gt;</span><span class="pln">
        </span><span class="tag">&lt;/View&gt;</span><span class="pln">
      </span><span class="tag">&lt;/View&gt;</span><span class="pln">
    );
  }
}</span></code></pre>
<p>Todo o conteúdo do código representa somente o trecho do novo <code>&lt;input&gt;</code> de comentário e o botão que o envia. </p>
<p><img src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/1.2_área+de+comentário.png" alt="área de comentário"></p>
<p>Se, por exemplo, precisarmos de todo o componente em uma tela específica para comentário, não poderemos fazer esse aproveitamento se o código estiver preso dentro do arquivo.</p>
<p>Iremos quebrar o código em mais componentes. Selecionaremos o código correspondente, utilizando o atalho "Ctrl + X" para recortamos esse trecho. Assim feito, pressionaremos o atalho "Ctrl + N" e, em seguida, será criado um novo arquivo exclusivo para este código. Chamaremos o novo arquivo de <code>InputComentario.js</code>.</p>
<p>Iremos inserir no nosso novo arquivo o cabeçalho que define um componente do React. </p>
<pre class="prettyprint"><code><span class="kwd">import</span><span class="pln"> </span><span class="typ">React</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'react'</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="typ">StyleSheet</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">Text</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">View</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">Image</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">Dimensions</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">FlatList</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">TouchableOpacity</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">TextInput</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'react-native'</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">const</span><span class="pln"> width </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Dimensions</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="str">'screen'</span><span class="pun">).</span><span class="pln">width</span><span class="pun">;</span></code></pre>
<p>Começaremos a fazer as adaptações necessárias no componente. Primeiro, iremos definir a classe <code>InputComentario</code>.
Todo o código vinculado à função de comentário deve estar dentro do <code>render()</code>. Por sua vez, o <code>render()</code> sempre retorna uma representação do seu JSX que marca o componente, então adicionaremos <code>return()</code> e inseriremos o código da <code>View</code>.</p>
<pre class="prettyprint"><code><span class="pln">    render</span><span class="pun">(){</span><span class="pln">
        </span><span class="kwd">return</span><span class="pun">(</span><span class="pln">
            </span><span class="pun">&lt;</span><span class="typ">View</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">novoComentario</span><span class="pun">}&gt;</span><span class="pln">
            </span><span class="pun">&lt;</span><span class="typ">TextInput</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">input</span><span class="pun">}</span><span class="pln">
                placeholder</span><span class="pun">=</span><span class="str">"Adicione um comentário..."</span><span class="pln">
                </span><span class="kwd">ref</span><span class="pun">={</span><span class="pln">input </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">inputComentario </span><span class="pun">=</span><span class="pln"> input</span><span class="pun">}</span><span class="pln">
                onChangeText</span><span class="pun">={</span><span class="pln">texto </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span><span class="pln">valorComentario</span><span class="pun">:</span><span class="pln"> texto</span><span class="pun">})}</span><span class="pln">
                </span><span class="pun">/&gt;</span><span class="pln">

            </span><span class="pun">&lt;</span><span class="typ">TouchableOpacity</span><span class="pln"> onPress</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">adicionaComentario</span><span class="pun">.</span><span class="pln">bind</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">)}&gt;</span><span class="pln">
              </span><span class="pun">&lt;</span><span class="typ">Image</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">icone</span><span class="pun">}</span><span class="pln">
                  source</span><span class="pun">={</span><span class="kwd">require</span><span class="pun">(</span><span class="str">'../../resources/img/send.png'</span><span class="pun">)}</span><span class="pln"> </span><span class="pun">/&gt;</span><span class="pln">
            </span><span class="pun">&lt;</span><span class="str">/TouchableOpacity&gt;
          &lt;/</span><span class="typ">View</span><span class="pun">&gt;</span><span class="pln">
        </span><span class="pun">&lt;</span><span class="str">/View&gt;
      &lt;/</span><span class="typ">View</span><span class="pun">&gt;</span><span class="pln">
        </span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>A função <code>render()</code> do novo componente está pronta. A seguir, veremos como melhorar as importações, observe que há itens que não iremos utilizar neste caso. Retiraremos <code>Text</code>,<code>Dimensions</code> e <code>FlatList</code> para reduzir a complexidade do código, gerando um componente mais simples e específico.</p>
<pre class="prettyprint"><code><span class="kwd">import</span><span class="pln"> </span><span class="typ">React</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'react'</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="typ">StyleSheet</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">View</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">Image</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">TouchableOpacity</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">TextInput</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'react-native'</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">const</span><span class="pln"> width </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Dimensions</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="str">'screen'</span><span class="pun">).</span><span class="pln">width</span><span class="pun">;</span></code></pre>
<p>Todas as propriedades de estilo estão ainda no outro arquivo. Iremos migrar as partes do código que são pertinentes. Selecionaremos toda a parte de estilo definida para o campo de texto em <code>Post.js</code>, passaremos para e uma nova folha de estilo em <code>InputComentario.js</code>.</p>
<p>Para marcar a nova folha de estilo, escreveremos <code>StyleSheet.creat()</code> e criaremos a variável <code>styles</code>. Feito isso, inseriremos o conteúdo correspondente ao estilo de <code>novoComentario</code>.</p>
<pre class="prettyprint"><code><span class="kwd">const</span><span class="pln"> styles </span><span class="pun">=</span><span class="pln"> </span><span class="typ">StyleSheet</span><span class="pun">.</span><span class="pln">create</span><span class="pun">({</span><span class="pln">
    novoComentario</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    flexDirection</span><span class="pun">:</span><span class="pln"> </span><span class="str">'row'</span><span class="pun">,</span><span class="pln">
    alignItems</span><span class="pun">:</span><span class="pln"> </span><span class="str">'center'</span><span class="pun">,</span><span class="pln">
    borderBottomWidth</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln">
    borderBottomColor</span><span class="pun">:</span><span class="pln"> </span><span class="str">'#ddd'</span><span class="pln">
  </span><span class="pun">},</span><span class="pln">
  input</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    flex</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln">
    height</span><span class="pun">:</span><span class="pln"> </span><span class="lit">40</span><span class="pun">,</span><span class="pln">
  </span><span class="pun">},</span><span class="pln">
  icone</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    width</span><span class="pun">:</span><span class="pln"> </span><span class="lit">30</span><span class="pun">,</span><span class="pln">
    height</span><span class="pun">:</span><span class="pln"> </span><span class="lit">30</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="pun">})</span></code></pre>
<p>No contexto de <code>Post.js</code>, utilizamos o termo <code>novoComentario</code> para diferenciar a área de criação de comentário das demais áreas. Neste novo contexto,  podemos utilizar uma nova semântica e alterar <code>novoComentario</code> para <code>container</code>.
Removeremos a linha <code>Dimensions</code>, pois ela se tornou desnecessária. </p>
<pre class="prettyprint"><code><span class="kwd">import</span><span class="pln"> </span><span class="typ">React</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'react'</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="typ">StyleSheet</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">View</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">Image</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">TouchableOpacity</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">TextInput</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'react-native'</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">default</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">InputComentario</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

    render</span><span class="pun">(){</span><span class="pln">
        </span><span class="kwd">return</span><span class="pun">(</span><span class="pln">
            </span><span class="pun">&lt;</span><span class="typ">View</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">container</span><span class="pun">}&gt;</span><span class="pln">
            </span><span class="pun">&lt;</span><span class="typ">TextInput</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">input</span><span class="pun">}</span><span class="pln"> 
                placeholder</span><span class="pun">=</span><span class="str">"Adicione um comentário..."</span><span class="pln">
                </span><span class="kwd">ref</span><span class="pun">={</span><span class="pln">input </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">inputComentario </span><span class="pun">=</span><span class="pln"> input</span><span class="pun">}</span><span class="pln">
                onChangeText</span><span class="pun">={</span><span class="pln">texto </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span><span class="pln">valorComentario</span><span class="pun">:</span><span class="pln"> texto</span><span class="pun">})}</span><span class="pln">
                </span><span class="pun">/&gt;</span></code></pre>
<p>Com isso, temos o código isolado dentro de <code>InputComentario.js</code>.</p>
<p>A seguir, chamaremos nosso <code>InputComentario</code> dentro de <code>render()</code> de <code>Post.js</code>. </p>
<pre class="prettyprint"><code><span class="com">//...</span><span class="pln">
          </span><span class="pun">{</span><span class="pln">foto</span><span class="pun">.</span><span class="pln">comentarios</span><span class="pun">.</span><span class="pln">map</span><span class="pun">(</span><span class="pln">comentario </span><span class="pun">=&gt;</span><span class="pln">
            </span><span class="pun">&lt;</span><span class="typ">View</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">comentario</span><span class="pun">}</span><span class="pln"> key</span><span class="pun">={</span><span class="pln">comentario</span><span class="pun">.</span><span class="pln">id</span><span class="pun">}&gt;</span><span class="pln">
              </span><span class="pun">&lt;</span><span class="typ">Text</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">tituloComentario</span><span class="pun">}&gt;{</span><span class="pln">comentario</span><span class="pun">.</span><span class="pln">login</span><span class="pun">}&lt;/</span><span class="typ">Text</span><span class="pun">&gt;</span><span class="pln">
              </span><span class="pun">&lt;</span><span class="typ">Text</span><span class="pun">&gt;{</span><span class="pln">comentario</span><span class="pun">.</span><span class="pln">texto</span><span class="pun">}&lt;/</span><span class="typ">Text</span><span class="pun">&gt;</span><span class="pln">
            </span><span class="pun">&lt;</span><span class="str">/View&gt;
          )}

          &lt;inputComentario /</span><span class="pun">&gt;</span><span class="pln">
          </span><span class="pun">&lt;</span><span class="str">/View&gt;
        &lt;/</span><span class="typ">View</span><span class="pun">&gt;</span><span class="pln">
    </span><span class="pun">);</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>Ao executarmos a aplicação, teremos a seguinte mensagem de erro:</p>
<pre class="prettyprint"><code><span class="typ">TaskQueue</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Erros</span><span class="pln"> </span><span class="kwd">with</span><span class="pln"> task</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Can</span><span class="str">'t find variable: InputComentario</span></code></pre>
<p>O componente <code>InputComentario</code> é novo , portanto, faremos a importação e depois, vamos marcar o diretório de origem desse componente.</p>
<pre class="prettyprint"><code><span class="kwd">import</span><span class="pln"> </span><span class="typ">React</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'react'</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="typ">StyleSheet</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">Text</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">View</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">Image</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">Dimensions</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">FlatList</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">TouchableOpacity</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">TextInput</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'react-native'</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> inputComentario </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'./inputComentario'</span><span class="pun">;</span></code></pre>
<p>Executaremos a aplicação e veremos que há uma nova mensagem de erro <code>TaskQueue</code>:</p>
<pre class="prettyprint"><code><span class="typ">TaskQueue</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Error</span><span class="pln"> </span><span class="kwd">with</span><span class="pln"> task</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">undefined</span><span class="pln"> </span><span class="kwd">is</span><span class="pln"> </span><span class="kwd">not</span><span class="pln"> an </span><span class="kwd">object</span><span class="pln"> </span><span class="pun">(</span><span class="pln">evaluating </span><span class="str">'this.adicionaComentario.bind'</span><span class="pun">)</span></code></pre>
<p>Há algum problema com a ligação dos componentes. </p>
<p>Na linha 21 do código, fazemos referência ao <code>this.adicionaComentario.bild</code>, vejamos respectivo trecho do código em <code>InputComentario</code>: </p>
<pre class="prettyprint"><code><span class="kwd">export</span><span class="pln"> </span><span class="kwd">default</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">InputComentario</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

    render</span><span class="pun">(){</span><span class="pln">
        </span><span class="kwd">return</span><span class="pun">(</span><span class="pln">
            </span><span class="pun">&lt;</span><span class="typ">View</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">novoComentario</span><span class="pun">}&gt;</span><span class="pln">
            </span><span class="pun">&lt;</span><span class="typ">TextInput</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">input</span><span class="pun">}</span><span class="pln">
                placeholder</span><span class="pun">=</span><span class="str">"Adicione um comentário..."</span><span class="pln">
                </span><span class="kwd">ref</span><span class="pun">={</span><span class="pln">input </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">inputComentario </span><span class="pun">=</span><span class="pln"> input</span><span class="pun">}</span><span class="pln">
                onChangeText</span><span class="pun">={</span><span class="pln">texto </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span><span class="pln">valorComentario</span><span class="pun">:</span><span class="pln"> texto</span><span class="pun">})}</span><span class="pln">
                </span><span class="pun">/&gt;</span><span class="pln">

            </span><span class="pun">&lt;</span><span class="typ">TouchableOpacity</span><span class="pln"> onPress</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">adicionaComentario</span><span class="pun">.</span><span class="pln">bind</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">)}&gt;</span><span class="pln">
              </span><span class="pun">&lt;</span><span class="typ">Image</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">icone</span><span class="pun">}</span><span class="pln">
                  source</span><span class="pun">={</span><span class="kwd">require</span><span class="pun">(</span><span class="str">'../../resources/img/send.png'</span><span class="pun">)}</span><span class="pln"> </span><span class="pun">/&gt;</span><span class="pln">
            </span><span class="pun">&lt;</span><span class="str">/TouchableOpacity&gt;
          &lt;/</span><span class="typ">View</span><span class="pun">&gt;</span><span class="pln">
        </span><span class="pun">&lt;</span><span class="str">/View&gt;
      &lt;/</span><span class="typ">View</span><span class="pun">&gt;</span><span class="pln">

        </span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p><code>adicionaComentario()</code> não se encontra exatamente no componente <code>InputComentario.js</code>, pois não temos a função definida nesta área, o que faz sentido, já que <code>adicionaComentario()</code> lida com a lista de fotos que é mantida no elemento <code>Post.js</code>. O ideal é que a função <code>adicionaComentario()</code> continue definida em <code>Post.js</code> para lidar corretamente com o status das fotos. </p>
<p>Porém, precisamos fazer com que o nosso componente <code>InputComentario.js</code> chame essa função quando ela for solicitada em <code>&lt;TouchableOpacity&gt;</code>, para que programa seja executado corretamente.</p>
<p>Observe: </p>
<pre class="prettyprint"><code><span class="kwd">export</span><span class="pln"> </span><span class="kwd">default</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">InputComentario</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

    render</span><span class="pun">(){</span><span class="pln">
        </span><span class="kwd">return</span><span class="pun">(</span><span class="pln">
            </span><span class="pun">&lt;</span><span class="typ">View</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">novoComentario</span><span class="pun">}&gt;</span><span class="pln">
            </span><span class="pun">&lt;</span><span class="typ">TextInput</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">input</span><span class="pun">}</span><span class="pln">
                placeholder</span><span class="pun">=</span><span class="str">"Adicione um comentário..."</span><span class="pln">
                </span><span class="kwd">ref</span><span class="pun">={</span><span class="pln">input </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">inputComentario </span><span class="pun">=</span><span class="pln"> input</span><span class="pun">}</span><span class="pln">
                onChangeText</span><span class="pun">={</span><span class="pln">texto </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span><span class="pln">valorComentario</span><span class="pun">:</span><span class="pln"> texto</span><span class="pun">})}</span><span class="pln">
                </span><span class="pun">/&gt;</span><span class="pln">

            </span><span class="pun">&lt;</span><span class="typ">TouchableOpacity</span><span class="pln"> onPress</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">adicionaComentario</span><span class="pun">.</span><span class="pln">bind</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">)}&gt;</span><span class="pln">
              </span><span class="pun">&lt;</span><span class="typ">Image</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">icone</span><span class="pun">}</span><span class="pln">
                  source</span><span class="pun">={</span><span class="kwd">require</span><span class="pun">(</span><span class="str">'../../resources/img/send.png'</span><span class="pun">)}</span><span class="pln"> </span><span class="pun">/&gt;</span><span class="pln">
            </span><span class="pun">&lt;</span><span class="str">/TouchableOpacity&gt;
          &lt;/</span><span class="typ">View</span><span class="pun">&gt;</span><span class="pln">
        </span><span class="pun">&lt;</span><span class="str">/View&gt;
      &lt;/</span><span class="typ">View</span><span class="pun">&gt;</span><span class="pln">

        </span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>Para solucionarmos essa questão,substituiremos o <code>this.adicionaComentario.bind(this)</code> em <code>TouchableOpacity</code>, pela referência da função <code>adicionaComentario()</code> como uma nova propriedade. </p>
<p>Em <code>Post.js</code>, iremos em <code>InputComentario.js</code> e passaremos um <code>comentarioCallback</code>com a referência da função, bem como o <code>bind</code>, para que não haja problema de acesso às informações do componente do React. </p>
<pre class="prettyprint"><code><span class="pln">          </span><span class="pun">{</span><span class="pln">foto</span><span class="pun">.</span><span class="pln">comentarios</span><span class="pun">.</span><span class="pln">map</span><span class="pun">(</span><span class="pln">comentario </span><span class="pun">=&gt;</span><span class="pln">
            </span><span class="pun">&lt;</span><span class="typ">View</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">comentario</span><span class="pun">}</span><span class="pln"> key</span><span class="pun">={</span><span class="pln">comentario</span><span class="pun">.</span><span class="pln">id</span><span class="pun">}&gt;</span><span class="pln">
              </span><span class="pun">&lt;</span><span class="typ">Text</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">tituloComentario</span><span class="pun">}&gt;{</span><span class="pln">comentario</span><span class="pun">.</span><span class="pln">login</span><span class="pun">}&lt;/</span><span class="typ">Text</span><span class="pun">&gt;</span><span class="pln">
              </span><span class="pun">&lt;</span><span class="typ">Text</span><span class="pun">&gt;{</span><span class="pln">comentario</span><span class="pun">.</span><span class="pln">texto</span><span class="pun">}&lt;/</span><span class="typ">Text</span><span class="pun">&gt;</span><span class="pln">
            </span><span class="pun">&lt;</span><span class="str">/View&gt;
          )}

          &lt;inputComentario 
            comentarioCallback={this.adicionaComentario.bind(this)}/</span><span class="pun">&gt;</span><span class="pln">
          </span><span class="pun">&lt;</span><span class="str">/View&gt;
        &lt;/</span><span class="typ">View</span><span class="pun">&gt;</span><span class="pln">
    </span><span class="pun">);</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>Dentro de <code>InputComentario.js</code>, em <code>TouchableOpacity</code> acessaremos a referência da função.</p>
<pre class="prettyprint"><code><span class="kwd">export</span><span class="pln"> </span><span class="kwd">default</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">InputComentario</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

    render</span><span class="pun">(){</span><span class="pln">
        </span><span class="kwd">return</span><span class="pun">(</span><span class="pln">
            </span><span class="pun">&lt;</span><span class="typ">View</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">novoComentario</span><span class="pun">}&gt;</span><span class="pln">
            </span><span class="pun">&lt;</span><span class="typ">TextInput</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">input</span><span class="pun">}</span><span class="pln">
                placeholder</span><span class="pun">=</span><span class="str">"Adicione um comentário..."</span><span class="pln">
                </span><span class="kwd">ref</span><span class="pun">={</span><span class="pln">input </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">inputComentario </span><span class="pun">=</span><span class="pln"> input</span><span class="pun">}</span><span class="pln">
                onChangeText</span><span class="pun">={</span><span class="pln">texto </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span><span class="pln">valorComentario</span><span class="pun">:</span><span class="pln"> texto</span><span class="pun">})}</span><span class="pln">
                </span><span class="pun">/&gt;</span><span class="pln">

            </span><span class="pun">&lt;</span><span class="typ">TouchableOpacity</span><span class="pln"> onPress</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">props</span><span class="pun">.</span><span class="pln">comentarioCallback</span><span class="pun">}&gt;</span><span class="pln">
              </span><span class="pun">&lt;</span><span class="typ">Image</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">icone</span><span class="pun">}</span><span class="pln">
                  source</span><span class="pun">={</span><span class="kwd">require</span><span class="pun">(</span><span class="str">'../../resources/img/send.png'</span><span class="pun">)}</span><span class="pln"> </span><span class="pun">/&gt;</span><span class="pln">
            </span><span class="pun">&lt;</span><span class="str">/TouchableOpacity&gt;
          &lt;/</span><span class="typ">View</span><span class="pun">&gt;</span><span class="pln">
        </span><span class="pun">&lt;</span><span class="str">/View&gt;
      &lt;/</span><span class="typ">View</span><span class="pun">&gt;</span><span class="pln">

        </span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>Aparentemente, nosso programa voltou a funcionar normalmente. Faremos um pequeno teste: na caixa de texto escreveremos um comentário e pressionaremos o botão para enviá-lo.</p>
<p>Veremos que nada acontece.</p>
<p>O <code>TouchableOpacity onPress</code> passa a referência do <code>comentarioCallback</code>, que nos leva a função <code>adicionaComentario</code>, em <code>Post.js</code>. Ao observarmos a função, veremos que os elementos são definidos em <code>this.state.valorComentario</code>. Ou seja, é no <code>valorComentario</code> que está mantido o estado do componente. </p>
<pre class="prettyprint"><code><span class="pln">adicionaComentario</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">valorComentario </span><span class="pun">===</span><span class="pln"> </span><span class="str">''</span><span class="pun">)</span><span class="pln">
      </span><span class="kwd">return</span><span class="pun">;</span><span class="pln">

    </span><span class="kwd">const</span><span class="pln"> novaLista </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[...</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">foto</span><span class="pun">.</span><span class="pln">comentarios</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      id</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">valorComentario</span><span class="pun">,</span><span class="pln">
      login</span><span class="pun">:</span><span class="pln"> </span><span class="str">'meuUsuario'</span><span class="pun">,</span><span class="pln">
      texto</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">valorComentario
    </span><span class="pun">}];</span><span class="pln">

    </span><span class="kwd">const</span><span class="pln"> fotoAtualizada </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="pun">...</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">foto</span><span class="pun">,</span><span class="pln">
      comentarios</span><span class="pun">:</span><span class="pln"> novaLista
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span><span class="pln">foto</span><span class="pun">:</span><span class="pln"> fotoAtualizada</span><span class="pun">,</span><span class="pln"> valorComentario</span><span class="pun">:</span><span class="pln"> </span><span class="str">''</span><span class="pun">});</span><span class="pln">
    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">inputComentario</span><span class="pun">.</span><span class="pln">clear</span><span class="pun">();</span><span class="pln">

  </span><span class="pun">}</span></code></pre>
<p>Encontramos um pequeno problema: o estado do componente não está mais disponível, pois nós estamos particionando componentes diferentes.</p>
<p>Todo o novo estado que era necessário para o componente, ficará centralizado em um novo componente específico em <code>InputComentario.js</code>.</p>
<p>Iremos criar um construtor (<code>constructor()</code>) e chamaremos um <code>super()</code> para construir todas as definições do componente React, e faremos no nosso <code>state</code> ter o <code>valorComentario</code> começando vazio. </p>
<pre class="prettyprint"><code><span class="kwd">import</span><span class="pln"> </span><span class="typ">React</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'react'</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="typ">StyleSheet</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">View</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">Image</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">TouchableOpacity</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">TextInput</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'react-native'</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">const</span><span class="pln"> width </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Dimensions</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="str">'screen'</span><span class="pun">).</span><span class="pln">width</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">default</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">InputComentario</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

    constructor</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">super</span><span class="pun">();</span><span class="pln">
        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            valorComentario</span><span class="pun">:</span><span class="pln"> </span><span class="str">''</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span></code></pre>
<p>Com isso, faz mais sentido o nosso <code>setState</code> do <code>OnChageText</code>, pois ele irá conseguir associar o valor do campo conforme ocorrem as modificações. </p>
<p>Vejamos o que podemos fazer agora, uma vez que o estado do <code>valorComentario</code> passou para <code>InputComentario</code>.</p>
<p>Ao observarmos <code>Post.js</code>, veremos que existem algumas configurações estranhas no nosso código. Em <code>adicionaComentario()</code>, percebam que <code>valorComentario</code> vindo do <code>this.state</code>, o que se refere ao estado do <code>Post.js</code>, mas não temos mais <code>valorComentario</code> vindo do <code>Post.js</code>.</p>
<pre class="prettyprint"><code><span class="pln">adicionaComentario</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">valorComentario </span><span class="pun">===</span><span class="pln"> </span><span class="str">''</span><span class="pun">)</span><span class="pln">
      </span><span class="kwd">return</span><span class="pun">;</span><span class="pln">

    </span><span class="kwd">const</span><span class="pln"> novaLista </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[...</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">foto</span><span class="pun">.</span><span class="pln">comentarios</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      id</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">valorComentario</span><span class="pun">,</span><span class="pln">
      login</span><span class="pun">:</span><span class="pln"> </span><span class="str">'meuUsuario'</span><span class="pun">,</span><span class="pln">
      texto</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">valorComentario
    </span><span class="pun">}];</span><span class="pln">

    </span><span class="kwd">const</span><span class="pln"> fotoAtualizada </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="pun">...</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">foto</span><span class="pun">,</span><span class="pln">
      comentarios</span><span class="pun">:</span><span class="pln"> novaLista
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span><span class="pln">foto</span><span class="pun">:</span><span class="pln"> fotoAtualizada</span><span class="pun">,</span><span class="pln"> valorComentario</span><span class="pun">:</span><span class="pln"> </span><span class="str">''</span><span class="pun">});</span><span class="pln">
    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">inputComentario</span><span class="pun">.</span><span class="pln">clear</span><span class="pun">();</span><span class="pln">

  </span><span class="pun">}</span></code></pre>
<p>A ideia é que nada mais possa ser acessado por meio do <code>this.state</code>. O <code>valorComentario</code> está em outro componente, então retiraremos todas as representações dessa referência no nosso código <code>Post.js</code>.</p>
<pre class="prettyprint"><code><span class="pln"> adicionaComentario</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">valorComentario </span><span class="pun">===</span><span class="pln"> </span><span class="str">''</span><span class="pun">)</span><span class="pln">
      </span><span class="kwd">return</span><span class="pun">;</span><span class="pln">

    </span><span class="kwd">const</span><span class="pln"> novaLista </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[...</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">foto</span><span class="pun">.</span><span class="pln">comentarios</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      id</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">valorComentario</span><span class="pun">,</span><span class="pln">
      login</span><span class="pun">:</span><span class="pln"> </span><span class="str">'meuUsuario'</span><span class="pun">,</span><span class="pln">
      texto</span><span class="pun">:</span><span class="pln"> valorComentario
    </span><span class="pun">}];</span><span class="pln">

    </span><span class="kwd">const</span><span class="pln"> fotoAtualizada </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="pun">...</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">foto</span><span class="pun">,</span><span class="pln">
      comentarios</span><span class="pun">:</span><span class="pln"> novaLista
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span><span class="pln">foto</span><span class="pun">:</span><span class="pln"> fotoAtualizada</span><span class="pun">,</span><span class="pln"> valorComentario</span><span class="pun">:</span><span class="pln"> </span><span class="str">''</span><span class="pun">});</span><span class="pln">
    inputComentario</span><span class="pun">.</span><span class="pln">clear</span><span class="pun">();</span><span class="pln">

  </span><span class="pun">}</span></code></pre>
<p>Ao executarmos a aplicação, veremos a mensagem de erro <code>Can't find variable: valorComentario</code>. Ou seja, <code>valorComentario</code> não é mais reconhecido como uma variável. Essa declaração faz sentido, pois a variável encontra-se em outro componente. 
Precisaremos que a função <code>adicionaComentario()</code> receba as informações de <code>inputComentario</code>. </p>
<p>Para isso, iremos inserir os parâmetros <code>valorComentario</code>e <code>inputComentario</code>. </p>
<pre class="prettyprint"><code><span class="pln"> adicionaComentario</span><span class="pun">(</span><span class="pln">valorComentario</span><span class="pun">,</span><span class="pln"> inputComentario</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">valorComentario </span><span class="pun">===</span><span class="pln"> </span><span class="str">''</span><span class="pun">)</span><span class="pln">
      </span><span class="kwd">return</span><span class="pun">;</span><span class="pln">

    </span><span class="kwd">const</span><span class="pln"> novaLista </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[...</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">foto</span><span class="pun">.</span><span class="pln">comentarios</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      id</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">valorComentario</span><span class="pun">,</span><span class="pln">
      login</span><span class="pun">:</span><span class="pln"> </span><span class="str">'meuUsuario'</span><span class="pun">,</span><span class="pln">
      texto</span><span class="pun">:</span><span class="pln"> valorComentario
    </span><span class="pun">}];</span><span class="pln">

    </span><span class="kwd">const</span><span class="pln"> fotoAtualizada </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="pun">...</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">foto</span><span class="pun">,</span><span class="pln">
      comentarios</span><span class="pun">:</span><span class="pln"> novaLista
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span><span class="pln">foto</span><span class="pun">:</span><span class="pln"> fotoAtualizada</span><span class="pun">,</span><span class="pln"> valorComentario</span><span class="pun">:</span><span class="pln"> </span><span class="str">''</span><span class="pun">});</span><span class="pln">
    inputComentario</span><span class="pun">.</span><span class="pln">clear</span><span class="pun">();</span><span class="pln">

  </span><span class="pun">}</span></code></pre>
<p>No <code>InputComentario.js</code>, especificamente no <code>OnPress</code> que está chamando <code>comentarioCallback</code>, passaremos a informação para a nossa aplicação. Em <code>comentarioCallback</code>, nosso <code>valorComentario</code> é acessível a partir de <code>this.state</code>.</p>
<p>Além disso, temos ainda o <code>inputComentario</code> como referência ao nosso <code>input</code> dentro de <code>&lt;TouchableOpacity&gt;</code>. A tag está logo acima do fechamento de <code>&lt;View&gt;</code>:</p>
<pre class="prettyprint"><code><span class="com">//...</span><span class="pln">
</span><span class="pun">&lt;</span><span class="typ">TouchableOpacity</span><span class="pln"> onPress</span><span class="pun">={</span><span class="pln">

        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">props</span><span class="pun">.</span><span class="pln">comentarioCallback</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">valorComentario</span><span class="pun">,</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">inputComentario</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">}&gt;</span><span class="pln">
           </span><span class="pun">&lt;</span><span class="typ">Image</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">icone</span><span class="pun">}</span><span class="pln">
                source</span><span class="pun">={</span><span class="kwd">require</span><span class="pun">(</span><span class="str">'../../resources/img/send.png'</span><span class="pun">)}</span><span class="pln"> </span><span class="pun">/&gt;</span><span class="pln">
  </span><span class="pun">&lt;/</span><span class="typ">TouchableOpacity</span><span class="pun">&gt;</span></code></pre>
<p>Toda a vez que passamos uma referência para a nossa propriedade, já estamos invocando a função se incluímos os parênteses <code>()</code>. Na verdade, queremos que a propriedade receba uma referência para a função, e não uma invocação. Para fazermos esse ajuste, usaremos uma <em>arrow function</em>, assinalando que se trata de uma referência. </p>
<pre class="prettyprint"><code><span class="pln">            </span><span class="tag">&lt;TouchableOpacity</span><span class="pln"> </span><span class="atn">onPress</span><span class="pun">={()=</span><span class="tag">&gt;</span><span class="pln"> {
                        this.props.comentarioCallback(this.state.valorComentario,this.inputComentario)
                        }}&gt;
              </span><span class="tag">&lt;Image</span><span class="pln"> </span><span class="atn">style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">icone</span><span class="pun">}</span><span class="pln">
                  </span><span class="atn">source</span><span class="pun">=</span><span class="atv">{require('../../resources/img/send.png'</span><span class="pln">)} </span><span class="tag">/&gt;</span><span class="pln">
            </span><span class="tag">&lt;/TouchableOpacity&gt;</span></code></pre>
<p>Temos ainda alguns itens para corrigir no elemento <code>Post.js</code>. Por exemplo, quando realizamos o <code>setState</code>, atualizamos a foto (<code>fotoAtualizada</code>), mas também <code>valorComentario</code>. Como sabemos, <code>valorComentario</code> não existe mais neste componente. Iremos, portanto, removê-lo. </p>
<pre class="prettyprint"><code><span class="pln">adicionaComentario</span><span class="pun">(</span><span class="pln">valorComentario</span><span class="pun">,</span><span class="pln"> inputComentario</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">valorComentario </span><span class="pun">===</span><span class="pln"> </span><span class="str">''</span><span class="pun">)</span><span class="pln">
      </span><span class="kwd">return</span><span class="pun">;</span><span class="pln">

    </span><span class="kwd">const</span><span class="pln"> novaLista </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[...</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">foto</span><span class="pun">.</span><span class="pln">comentarios</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      id</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">valorComentario</span><span class="pun">,</span><span class="pln">
      login</span><span class="pun">:</span><span class="pln"> </span><span class="str">'meuUsuario'</span><span class="pun">,</span><span class="pln">
      texto</span><span class="pun">:</span><span class="pln"> valorComentario
    </span><span class="pun">}];</span><span class="pln">

    </span><span class="kwd">const</span><span class="pln"> fotoAtualizada </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="pun">...</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">foto</span><span class="pun">,</span><span class="pln">
      comentarios</span><span class="pun">:</span><span class="pln"> novaLista
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span><span class="pln">foto</span><span class="pun">:</span><span class="pln"> fotoAtualizada</span><span class="pun">,});</span><span class="pln">
    inputComentario</span><span class="pun">.</span><span class="pln">clear</span><span class="pun">();</span><span class="pln">

  </span><span class="pun">}</span></code></pre>
<p>Quem possui o <code>valorComentario</code> é o <code>InputComentario.js</code>. Portanto, em <code>comentarioCallback</code>, faremos o <code>setState</code> para limpar o <code>valorComentario</code>, como vinhamos fazendo no componente <code>Post.js</code>.</p>
<pre class="prettyprint"><code><span class="pln">            </span><span class="tag">&lt;TouchableOpacity</span><span class="pln"> </span><span class="atn">onPress</span><span class="pun">={()</span><span class="pln"> </span><span class="tag">=&gt;</span><span class="pln"> {
            this.props.comentarioCallback(this.state.valorComentario, this.inputComentario)
            this.setState({valorComentario:''})
            }}&gt;
              </span><span class="tag">&lt;Image</span><span class="pln"> </span><span class="atn">style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">icone</span><span class="pun">}</span><span class="pln">
                  </span><span class="atn">source</span><span class="pun">=</span><span class="atv">{require('../../resources/img/send.png'</span><span class="pln">)} </span><span class="tag">/&gt;</span><span class="pln">
            </span><span class="tag">&lt;/TouchableOpacity&gt;</span><span class="pln">
          </span><span class="tag">&lt;/View&gt;</span><span class="pln">
        </span><span class="tag">&lt;/View&gt;</span><span class="pln">
      </span><span class="tag">&lt;/View&gt;</span><span class="pln">

        );
    }
}</span></code></pre>
<p>Ao tentarmos adicionar um novo comentário no nosso simulador Android, veremos que tudo o corre perfeitamente. </p>
<p>Vamos analisar a realidade do nosso código atualmente. Ao observarmos o <code>inputComentario.js</code>, veremos que tanto o estado, como a marcação e o estilo, definem uma visualização de um componente, que não necessariamente contém a lógica do negócio implementada internamente, e sim, a lógica de visualização. </p>
<p>Os componentes menores que existem para ajudar na visualização da nossa aplicação são chamados <strong><em>presentational components</em></strong>. </p>
<p>Arquivo <code>Post.js</code> continua mantendo a lógica, a informação e o estado inerente ao seu negócio. Este componente maior que isola e encapsula as regras do seu negócio chamamos de <strong><em>container components</em></strong>.</p>

                        </div>
                    </section>
                    
                        <button class="video-transcription-button transcription-toggle" aria-hidden="true">
                            <span class="video-transcription-button-text">continuar lendo</span>
                        </button>
                    
                
            </div>
        </section>
    

	
	
	
	
	
	
	
	
	
	

			
				





	
	
		<section class="task-actions">
			<div class="container theater-mode">
				




<a href="https://cursos.alura.com.br/forum/curso-react-native-parte-2/exercicio-dividindo-containers-e-presentational-components/35769/novo" class=" task-actions-button task-actions-button-forum">Tirar Dúvida</a><!--
		 --><a href="https://cursos.alura.com.br/course/react-native-parte-2/task/35769/next" class="task-actions-button task-body-actions-button task-actions-button-next">Próxima Atividade</a>
			</div>
		</section>
	


			
		</main>
	</section>
	











<aside class="task-menu" style="position: absolute;">
	<section class="task-menu-header">
		<button title="Fechar menu" aria-label="Fechar menu" type="button" class="openMenu-button task-menu-button "></button>
		<div class="task-menu-header-info">
			<a class="task-menu-header-info-title" href="https://cursos.alura.com.br/course/react-native-parte-2" title="Ir para página do curso">
				<img src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/react-native-parte-2.svg" alt="ícone React Native parte 2: Aprimorando app com navegação e mais recursos" class="task-menu-header-info-title-icon " width="37.5px" height="37.5px">
				<h2 class="task-menu-header-info-title-text">React Native parte 2: Aprimorando app com navegação e mais recursos</h2>
			</a>
			<div class="task-menu-header-info-progress">
				
				<span class="task-menu-header-info-progress-percentage ">10%</span>
				<span class="task-menu-header-info-progress-bar" style="background-image: linear-gradient(to right, #9de482, #9de482 10%, transparent 10%);"></span>
			</div>
		</div>
	</section>
	
	<section class="task-menu-section">
		<div class="task-menu-section-title">
			<span class="task-menu-section-title-number ">Aula<strong>01</strong>
				<span>de 05</span></span>
			<h3 class="task-menu-section-title-text">
				Dividindo em container e presentational components
			</h3>
		</div>
	</section>
	<nav class="task-menu-nav">
		<h2 class="task-menu-nav-title">
			Atividades
			<span>3 de 14</span>
		</h2>
		<ul class="task-menu-nav-list">
			
				
				<li class="task-menu-nav-item ">
					<a href="https://cursos.alura.com.br/course/react-native-parte-2/task/35767" class="task-menu-nav-item-link task-menu-nav-item-link-VIDEO">
					<svg class="task-menu-nav-item-svg task-menu-nav-item-svg--done" aria-label="Atividade de Vídeo concluída">
						<use xlink:href="/images/gnarus/classPage/icon-menu-icons.svg#VIDEO"></use>
					</svg>
					<span class="task-menu-nav-item-number">01</span>
					<span class="task-menu-nav-item-text">
						<span class="task-menu-nav-item-title" title="Introdução">
							Introdução
						</span>
						
						<span class="task-menu-nav-item-infos">
							
								<span class="task-menu-nav-item-videoDuration" title="Ir para o Vídeo">02min</span>
							
						</span>
					</span>
					
					</a>
				</li>
			
				
				<li class="task-menu-nav-item ">
					<a href="https://cursos.alura.com.br/course/react-native-parte-2/task/35768" class="task-menu-nav-item-link task-menu-nav-item-link-VIDEO">
					<svg class="task-menu-nav-item-svg task-menu-nav-item-svg--done" aria-label="Atividade de Vídeo concluída">
						<use xlink:href="/images/gnarus/classPage/icon-menu-icons.svg#VIDEO"></use>
					</svg>
					<span class="task-menu-nav-item-number">02</span>
					<span class="task-menu-nav-item-text">
						<span class="task-menu-nav-item-title" title="Adequando comportamentos nas duas plataformas">
							Adequando comportamentos nas duas plataformas
						</span>
						
						<span class="task-menu-nav-item-infos">
							
								<span class="task-menu-nav-item-videoDuration" title="Ir para o Vídeo">09min</span>
							
						</span>
					</span>
					
					</a>
				</li>
			
				
				<li class="task-menu-nav-item task-menu-nav-item--selected">
					<a href="https://cursos.alura.com.br/course/react-native-parte-2/task/35769" class="task-menu-nav-item-link task-menu-nav-item-link-VIDEO">
					<svg class="task-menu-nav-item-svg task-menu-nav-item-svg--done" aria-label="Atividade de Vídeo concluída">
						<use xlink:href="/images/gnarus/classPage/icon-menu-icons.svg#VIDEO"></use>
					</svg>
					<span class="task-menu-nav-item-number">03</span>
					<span class="task-menu-nav-item-text">
						<span class="task-menu-nav-item-title" title="Dividindo Containers e Presentational Components">
							Dividindo Containers e Presentational Components
						</span>
						
						<span class="task-menu-nav-item-infos">
							
								<span class="task-menu-nav-item-videoDuration" title="Ir para o Vídeo">16min</span>
							
						</span>
					</span>
					
					</a>
				</li>
			
				
				<li class="task-menu-nav-item ">
					<a href="https://cursos.alura.com.br/course/react-native-parte-2/task/35770" class="task-menu-nav-item-link task-menu-nav-item-link-VIDEO">
					<svg class="task-menu-nav-item-svg " aria-label="Atividade de Vídeo não concluída">
						<use xlink:href="/images/gnarus/classPage/icon-menu-icons.svg#VIDEO"></use>
					</svg>
					<span class="task-menu-nav-item-number">04</span>
					<span class="task-menu-nav-item-text">
						<span class="task-menu-nav-item-title" title="Extraindo mais Presentational Components">
							Extraindo mais Presentational Components
						</span>
						
						<span class="task-menu-nav-item-infos">
							
								<span class="task-menu-nav-item-videoDuration" title="Ir para o Vídeo">11min</span>
							
						</span>
					</span>
					
					</a>
				</li>
			
				
				<li class="task-menu-nav-item ">
					<a href="https://cursos.alura.com.br/course/react-native-parte-2/task/35771" class="task-menu-nav-item-link task-menu-nav-item-link-VIDEO">
					<svg class="task-menu-nav-item-svg " aria-label="Atividade de Vídeo não concluída">
						<use xlink:href="/images/gnarus/classPage/icon-menu-icons.svg#VIDEO"></use>
					</svg>
					<span class="task-menu-nav-item-number">05</span>
					<span class="task-menu-nav-item-text">
						<span class="task-menu-nav-item-title" title="Definindo nosso único Container Component">
							Definindo nosso único Container Component
						</span>
						
						<span class="task-menu-nav-item-infos">
							
								<span class="task-menu-nav-item-videoDuration" title="Ir para o Vídeo">13min</span>
							
						</span>
					</span>
					
					</a>
				</li>
			
				
				<li class="task-menu-nav-item ">
					<a href="https://cursos.alura.com.br/course/react-native-parte-2/task/36335" class="task-menu-nav-item-link task-menu-nav-item-link-VIDEO">
					<svg class="task-menu-nav-item-svg " aria-label="Atividade de Vídeo não concluída">
						<use xlink:href="/images/gnarus/classPage/icon-menu-icons.svg#VIDEO"></use>
					</svg>
					<span class="task-menu-nav-item-number">06</span>
					<span class="task-menu-nav-item-text">
						<span class="task-menu-nav-item-title" title="Refatorando funcionalidades">
							Refatorando funcionalidades
						</span>
						
						<span class="task-menu-nav-item-infos">
							
								<span class="task-menu-nav-item-videoDuration" title="Ir para o Vídeo">07min</span>
							
						</span>
					</span>
					
					</a>
				</li>
			
				
				<li class="task-menu-nav-item ">
					<a href="https://cursos.alura.com.br/course/react-native-parte-2/task/30199" class="task-menu-nav-item-link task-menu-nav-item-link-TEXT_CONTENT">
					<svg class="task-menu-nav-item-svg " aria-label="Atividade de Atividade sem Resposta do Aluno não concluída">
						<use xlink:href="/images/gnarus/classPage/icon-menu-icons.svg#TEXT_CONTENT"></use>
					</svg>
					<span class="task-menu-nav-item-number">07</span>
					<span class="task-menu-nav-item-text">
						<span class="task-menu-nav-item-title" title="Ajustando comportamento no Android">
							Ajustando comportamento no Android
						</span>
						
					</span></a>
				</li>
			
				
				<li class="task-menu-nav-item ">
					<a href="https://cursos.alura.com.br/course/react-native-parte-2/task/30280" class="task-menu-nav-item-link task-menu-nav-item-link-MULTIPLE_CHOICE">
					<svg class="task-menu-nav-item-svg " aria-label="Atividade de Atividade de Múltipla Escolha não concluída">
						<use xlink:href="/images/gnarus/classPage/icon-menu-icons.svg#MULTIPLE_CHOICE"></use>
					</svg>
					<span class="task-menu-nav-item-number">08</span>
					<span class="task-menu-nav-item-text">
						<span class="task-menu-nav-item-title" title="Usando a API Platform">
							Usando a API Platform
						</span>
						
					</span></a>
				</li>
			
				
				<li class="task-menu-nav-item ">
					<a href="https://cursos.alura.com.br/course/react-native-parte-2/task/30351" class="task-menu-nav-item-link task-menu-nav-item-link-TEXT_CONTENT">
					<svg class="task-menu-nav-item-svg " aria-label="Atividade de Atividade sem Resposta do Aluno não concluída">
						<use xlink:href="/images/gnarus/classPage/icon-menu-icons.svg#TEXT_CONTENT"></use>
					</svg>
					<span class="task-menu-nav-item-number">09</span>
					<span class="task-menu-nav-item-text">
						<span class="task-menu-nav-item-title" title="Dividindo em componentes menores">
							Dividindo em componentes menores
						</span>
						
					</span></a>
				</li>
			
				
				<li class="task-menu-nav-item ">
					<a href="https://cursos.alura.com.br/course/react-native-parte-2/task/30575" class="task-menu-nav-item-link task-menu-nav-item-link-TEXT_CONTENT">
					<svg class="task-menu-nav-item-svg " aria-label="Atividade de Atividade sem Resposta do Aluno não concluída">
						<use xlink:href="/images/gnarus/classPage/icon-menu-icons.svg#TEXT_CONTENT"></use>
					</svg>
					<span class="task-menu-nav-item-number">10</span>
					<span class="task-menu-nav-item-text">
						<span class="task-menu-nav-item-title" title="Identificando mais Presentational Components">
							Identificando mais Presentational Components
						</span>
						
					</span></a>
				</li>
			
				
				<li class="task-menu-nav-item ">
					<a href="https://cursos.alura.com.br/course/react-native-parte-2/task/33317" class="task-menu-nav-item-link task-menu-nav-item-link-SINGLE_CHOICE">
					<svg class="task-menu-nav-item-svg " aria-label="Atividade de Atividade de Única Escolha não concluída">
						<use xlink:href="/images/gnarus/classPage/icon-menu-icons.svg#SINGLE_CHOICE"></use>
					</svg>
					<span class="task-menu-nav-item-number">11</span>
					<span class="task-menu-nav-item-text">
						<span class="task-menu-nav-item-title" title="Extraindo ainda mais código do Post">
							Extraindo ainda mais código do Post
						</span>
						
					</span></a>
				</li>
			
				
				<li class="task-menu-nav-item ">
					<a href="https://cursos.alura.com.br/course/react-native-parte-2/task/30899" class="task-menu-nav-item-link task-menu-nav-item-link-TEXT_CONTENT">
					<svg class="task-menu-nav-item-svg " aria-label="Atividade de Atividade sem Resposta do Aluno não concluída">
						<use xlink:href="/images/gnarus/classPage/icon-menu-icons.svg#TEXT_CONTENT"></use>
					</svg>
					<span class="task-menu-nav-item-number">12</span>
					<span class="task-menu-nav-item-text">
						<span class="task-menu-nav-item-title" title="Evoluindo nossa implementação: Mantendo estado em um único Container Component">
							Evoluindo nossa implementação: Mantendo estado em um único Container Component
						</span>
						
					</span></a>
				</li>
			
				
				<li class="task-menu-nav-item ">
					<a href="https://cursos.alura.com.br/course/react-native-parte-2/task/33211" class="task-menu-nav-item-link task-menu-nav-item-link-TEXT_CONTENT">
					<svg class="task-menu-nav-item-svg " aria-label="Atividade de Atividade sem Resposta do Aluno não concluída">
						<use xlink:href="/images/gnarus/classPage/icon-menu-icons.svg#TEXT_CONTENT"></use>
					</svg>
					<span class="task-menu-nav-item-number">13</span>
					<span class="task-menu-nav-item-text">
						<span class="task-menu-nav-item-title" title="Transferindo a lógica de comentários para o Container Component">
							Transferindo a lógica de comentários para o Container Component
						</span>
						
					</span></a>
				</li>
			
				
				<li class="task-menu-nav-item ">
					<a href="https://cursos.alura.com.br/course/react-native-parte-2/task/33299" class="task-menu-nav-item-link task-menu-nav-item-link-MULTIPLE_CHOICE">
					<svg class="task-menu-nav-item-svg " aria-label="Atividade de Atividade de Múltipla Escolha não concluída">
						<use xlink:href="/images/gnarus/classPage/icon-menu-icons.svg#MULTIPLE_CHOICE"></use>
					</svg>
					<span class="task-menu-nav-item-number">14</span>
					<span class="task-menu-nav-item-text">
						<span class="task-menu-nav-item-title" title="Evitando repetição de código">
							Evitando repetição de código
						</span>
						
					</span></a>
				</li>
			
		</ul>
	</nav>
	<section class="task-menu-sections">
		<h2 class="task-menu-sections-title">
			Aulas
		</h2>
		<select class="task-menu-sections-select" onchange="location.href=&#39;/course/react-native-parte-2/section/&#39;+this.value;">
			
				<option value="1" selected="">01. Dividindo em container e presentational components</option>
			
				<option value="2">02. Efetuando login e armazenando dados</option>
			
				<option value="3">03. Navegando entre telas do Instalura</option>
			
				<option value="4">04. Integrando funcionalidades com a Instalura API</option>
			
				<option value="5">05. Visitando perfil dos amigos</option>
			
		</select>
	</section>
	<section class="task-menu-others">
		<h2 class="task-menu-others-title ">
			Outros Links
		</h2>
		<a href="https://cursos.alura.com.br/forum/curso-react-native-parte-2/todos" class="task-menu-others-link task-menu-others-link-forum " title="Ir para o fórum do curso">Fórum</a>
		<a href="https://cursos.alura.com.br/dashboard" class="task-menu-others-link task-menu-others-link-curso" title="Ir para a página principal">Trocar Curso</a>
	</section>
	<section class="task-menu-footer">
		<a class="task-menu-footer-user" href="https://cursos.alura.com.br/user/artanniel" title="Ir para sua página de usuário">
			<img src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/3f46af56a2a5560574cacde2f7e93aeb.png" alt="Gravatar de Artanniel Fortes" class="task-menu-footer-img" width="40px" height="40px">
			
				<p class="task-menu-footer-detalhes">
					<span class="task-menu-footer-detalhes-nome">Artanniel Fortes</span>
					<span class="task-menu-footer-detalhes-xp">
						28.8k xp
					</span>
				</p>
			
			<input type="hidden" value="">
			<input type="hidden" value="">
		</a>
		<a href="https://cursos.alura.com.br/dashboard" class="task-menu-footer-logo">
			<img src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/icon-menu-alura.svg" alt="Logo da Alura" class="task-menu-footer-logo-image" width="19px" height="32px" title="Ir para a página principal">
		</a>
	</section>
</aside>

</section>




	<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/jquery-2.1.3.min.32015dd4.js"></script>
	<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/buttonToggle.1c952a31.js" async=""></script>
	<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/sectionMenu.9c6d35d8.js" async=""></script>

	<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/marked.min.ef22e0e8.js"></script>
	<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/markdownEditor.46e923e3.js" async=""></script>
	<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/caret.df98f577.js" async=""></script>
	<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/keydownWatchers.f20680cd.js" async=""></script>
	<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/prettify.min.49a10a85.js" async=""></script>

	<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/preventsMultipleInteractions.ccefe158.js" async=""></script>
	<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/assessment.050f656f.js" async=""></script>
	<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/login-form.20124546.js" async=""></script>
	<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/classPage.1c6f5a08.js"></script>
	<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/aria.1c51db86.js"></script>
	<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/phrase.3c4b05fc.js"></script>
	<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/feedback.98f71e18.js"></script>
	
	
		<!-- video specific -->
		<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/scroll-top.8c3e8bb3.js"></script>
		<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/video.min.42199840.js"></script>
		<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/vimeo.2540c5c4.js"></script>
		<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/videojs.ga.min.277960ee.js"></script>
		<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/video-js-resolutions.min.badb462c.js"></script>
		<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/video.d81dca2d.js"></script>
	

	
	
	
	

	<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/partitura.75335550.js"></script>
	<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/audioProgress.71d14880.js"></script>
	<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/audioPlayer.9e2e5334.js"></script>



	

	
		

<script src="./React Native parte 2_ Aula 1 - Atividade 3 Dividindo Containers e Presentational Components _ Alura - Cursos online de tecnologia_files/customerio.ad52be65.js"></script>
<script>
    var tracker = new CustomerIO('fccd7e3d49531457b6b2');
    tracker.identify('46683', 'fortesads@gmail.com', '1471702532');
</script>
	



<script type="text/javascript" id="">function eventClick(d,a,b,c){a.includes(" \x3e ")&&(a=document.querySelector(a).textContent);b.includes(" \x3e ")&&(b=document.querySelector(b).textContent);(c=document.querySelector(c))&&c.addEventListener("click",function(){dataLayer.push({event:"gaEvent",eventCategory:d,eventAction:a,eventLabel:b})})}eventClick("Menu","Logo","","body \x3e header \x3e div \x3e a");eventClick("Menu","Todos os Cursos","Abrir","body \x3e div.home-fundo \x3e header \x3e div \x3e div.header-navegacao \x3e nav");
eventClick("Menu","Todos os Cursos","Cursos de Mobile","body \x3e div.home-fundo \x3e header \x3e div \x3e div.header-navegacao \x3e nav \x3e ul \x3e li.header-cursos-lista-categoria.header-cursos-lista-categoria--mobile");eventClick("Menu","Todos os Cursos","Cursos de Programa\u00e7\u00e3o","body \x3e div.home-fundo \x3e header \x3e div \x3e div.header-navegacao \x3e nav \x3e ul \x3e li.header-cursos-lista-categoria.header-cursos-lista-categoria--programacao");
eventClick("Menu","Todos os Cursos","Cursos de Front-end","body \x3e div.home-fundo \x3e header \x3e div \x3e div.header-navegacao \x3e nav \x3e ul \x3e li.header-cursos-lista-categoria.header-cursos-lista-categoria--front-end");eventClick("Menu","Todos os Cursos","Cursos de Infraestrutura","body \x3e div.home-fundo \x3e header \x3e div \x3e div.header-navegacao \x3e nav \x3e ul \x3e li.header-cursos-lista-categoria.header-cursos-lista-categoria--infraestrutura");
eventClick("Menu","Todos os Cursos","Cursos de Design \x26 UX","body \x3e div.home-fundo \x3e header \x3e div \x3e div.header-navegacao \x3e nav \x3e ul \x3e li.header-cursos-lista-categoria.header-cursos-lista-categoria--design-ux");eventClick("Menu","Todos os Cursos","Cursos de Business","body \x3e div.home-fundo \x3e header \x3e div \x3e div.header-navegacao \x3e nav \x3e ul \x3e li.header-cursos-lista-categoria.header-cursos-lista-categoria--business");
eventClick("Menu","Conhe\u00e7a as Carreiras","","body \x3e div.home-fundo \x3e header \x3e div \x3e div.header-navegacao \x3e a.header-navegacao-carreiras.navegacao-hover");eventClick("Menu","Alura para Empresas","","body \x3e div.home-fundo \x3e header \x3e div \x3e div.header-navegacao \x3e a.header-navegacao-empresas.navegacao-hover");eventClick("Menu","Login","","body \x3e div.home-fundo \x3e header \x3e div \x3e div.header-utilitario \x3e a.header-utilitario-login");
eventClick("Menu","Matricule-se","","body \x3e div.home-fundo \x3e header \x3e div \x3e div.header-utilitario \x3e a.header-utilitario-cta");eventClick("Menu","Busca","Abrir","body \x3e header \x3e div \x3e div.header-utilitario \x3e a.header-utilitario-busca");eventClick("Menu","Busca","Buscar","body \x3e header \x3e section \x3e div \x3e form \x3e button");eventClick("Footer","Primeira Se\u00e7\u00e3o","Alura","body \x3e footer.footer \x3e div \x3e div.footer-info \x3e div.footer-logos \x3e a.footer-logos-home");
eventClick("Footer","Primeira Se\u00e7\u00e3o","Caelum","body \x3e footer.footer \x3e div \x3e div.footer-info \x3e div.footer-logos \x3e a.footer-link-caelum");eventClick("Footer","Primeira Se\u00e7\u00e3o","Apostilas","body \x3e footer.footer \x3e div \x3e div.footer-navegue \x3e ul \x3e li:nth-child(1) \x3e a");eventClick("Footer","Primeira Se\u00e7\u00e3o","Planos","body \x3e footer.footer \x3e div \x3e div.footer-navegue \x3e ul \x3e li:nth-child(2) \x3e a");
eventClick("Footer","Primeira Se\u00e7\u00e3o","Todos os Cursos","body \x3e footer.footer \x3e div \x3e div.footer-navegue \x3e ul \x3e li:nth-child(3) \x3e a");eventClick("Footer","Primeira Se\u00e7\u00e3o","Carreiras","body \x3e footer.footer \x3e div \x3e div.footer-navegue \x3e ul \x3e li:nth-child(4) \x3e a");eventClick("Footer","Primeira Se\u00e7\u00e3o","Instrutores","body \x3e footer.footer \x3e div \x3e div.footer-navegue \x3e ul \x3e li:nth-child(5) \x3e a");
eventClick("Footer","Primeira Se\u00e7\u00e3o","Como virar Instrutor","body \x3e footer.footer \x3e div \x3e div.footer-navegue \x3e ul \x3e li:nth-child(6) \x3e a");eventClick("Footer","Primeira Se\u00e7\u00e3o","Ranking","body \x3e footer.footer \x3e div \x3e div.footer-navegue \x3e ul \x3e li:nth-child(7) \x3e a");eventClick("Footer","Primeira Se\u00e7\u00e3o","Blog da Alura","body \x3e footer.footer \x3e div \x3e div.footer-navegue \x3e ul \x3e li:nth-child(8) \x3e a");
eventClick("Footer","Primeira Se\u00e7\u00e3o","Podcast Nerdtech","body \x3e footer.footer \x3e div \x3e div.footer-navegue \x3e ul \x3e li:nth-child(9) \x3e a");eventClick("Footer","Primeira Se\u00e7\u00e3o","Pol\u00edtica de Privacidade","body \x3e footer.footer \x3e div \x3e div.footer-navegue \x3e ul \x3e li:nth-child(10) \x3e a");eventClick("Footer","Primeira Se\u00e7\u00e3o","Termos de Uso","body \x3e footer.footer \x3e div \x3e div.footer-navegue \x3e ul \x3e li:nth-child(11) \x3e a");
eventClick("Footer","Primeira Se\u00e7\u00e3o","Sobre N\u00f3s","body \x3e footer.footer \x3e div \x3e div.footer-navegue \x3e ul \x3e li:nth-child(12) \x3e a");eventClick("Footer","Primeira Se\u00e7\u00e3o","Perguntas Frequentes","body \x3e footer.footer \x3e div \x3e div.footer-navegue \x3e ul \x3e li:nth-child(13) \x3e a");eventClick("Footer","Primeira Se\u00e7\u00e3o","Youtube","body \x3e footer.footer \x3e div \x3e div.footer-column.footer-column-cards \x3e div.footer-card-hotLinks \x3e div.footer-card-hotLinks-info.footer-card-redes \x3e a:nth-child(1)");
eventClick("Footer","Primeira Se\u00e7\u00e3o","Facebook","body \x3e footer.footer \x3e div \x3e div.footer-column.footer-column-cards \x3e div.footer-card-hotLinks \x3e div.footer-card-hotLinks-info.footer-card-redes \x3e a:nth-child(2)");eventClick("Footer","Primeira Se\u00e7\u00e3o","Twitter","body \x3e footer.footer \x3e div \x3e div.footer-column.footer-column-cards \x3e div.footer-card-hotLinks \x3e div.footer-card-hotLinks-info.footer-card-redes \x3e a:nth-child(3)");
eventClick("Footer","Primeira Se\u00e7\u00e3o","Hipsters","body \x3e footer.footer \x3e div \x3e div.footer-column.footer-column-cards \x3e div.footer-card-hotLinks \x3e div.footer-card-hotLinks-info.footer-card-redes \x3e a:nth-child(4)");eventClick("Footer","Primeira Se\u00e7\u00e3o","Google Play","body \x3e footer.footer \x3e div \x3e div.footer-column.footer-column-cards \x3e div.footer-card-hotLinks \x3e div.footer-card-hotLinks-info.footer-card-mobile \x3e a:nth-child(1)");
eventClick("Footer","Primeira Se\u00e7\u00e3o","App Store","body \x3e footer.footer \x3e div \x3e div.footer-column.footer-column-cards \x3e div.footer-card-hotLinks \x3e div.footer-card-hotLinks-info.footer-card-mobile \x3e a:nth-child(2)");eventClick("Footer","Primeira Se\u00e7\u00e3o","Fale Conosco","body \x3e footer.footer \x3e div \x3e div:nth-child(3) \x3e a.footer-card.footer-card-contato");eventClick("Footer","Primeira Se\u00e7\u00e3o","Empresa?","body \x3e footer.footer \x3e div \x3e div:nth-child(3) \x3e a.footer-card.footer-card-empresa");
eventClick("Footer","Mobile","body \x3e nav \x3e div \x3e a:nth-child(2)","body \x3e nav \x3e div \x3e a:nth-child(2)");eventClick("Footer","Mobile","body \x3e nav \x3e div \x3e a:nth-child(3)","body \x3e nav \x3e div \x3e a:nth-child(3)");eventClick("Footer","Mobile","body \x3e nav \x3e div \x3e a:nth-child(4)","body \x3e nav \x3e div \x3e a:nth-child(4)");eventClick("Footer","Mobile","body \x3e nav \x3e div \x3e a:nth-child(5)","body \x3e nav \x3e div \x3e a:nth-child(5)");
eventClick("Footer","Mobile","body \x3e nav \x3e div \x3e a:nth-child(6)","body \x3e nav \x3e div \x3e a:nth-child(6)");eventClick("Footer","Mobile","body \x3e nav \x3e div \x3e a:nth-child(7)","body \x3e nav \x3e div \x3e a:nth-child(7)");eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(9)","body \x3e nav \x3e div \x3e a:nth-child(9)");eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(10)","body \x3e nav \x3e div \x3e a:nth-child(10)");
eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(11)","body \x3e nav \x3e div \x3e a:nth-child(11)");eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(12)","body \x3e nav \x3e div \x3e a:nth-child(12)");eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(13)","body \x3e nav \x3e div \x3e a:nth-child(13)");
eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(14)","body \x3e nav \x3e div \x3e a:nth-child(14)");eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(15)","body \x3e nav \x3e div \x3e a:nth-child(15)");eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(16)","body \x3e nav \x3e div \x3e a:nth-child(16)");
eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(17)","body \x3e nav \x3e div \x3e a:nth-child(17)");eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(18)","body \x3e nav \x3e div \x3e a:nth-child(18)");eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(19)","body \x3e nav \x3e div \x3e a:nth-child(19)");
eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(20)","body \x3e nav \x3e div \x3e a:nth-child(20)");eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(21)","body \x3e nav \x3e div \x3e a:nth-child(21)");eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(22)","body \x3e nav \x3e div \x3e a:nth-child(22)");
eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(23)","body \x3e nav \x3e div \x3e a:nth-child(23)");eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(24)","body \x3e nav \x3e div \x3e a:nth-child(24)");eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(25)","body \x3e nav \x3e div \x3e a:nth-child(25)");
eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(26)","body \x3e nav \x3e div \x3e a:nth-child(26)");eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(27)","body \x3e nav \x3e div \x3e a:nth-child(27)");eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(28)","body \x3e nav \x3e div \x3e a:nth-child(28)");
eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(29)","body \x3e nav \x3e div \x3e a:nth-child(29)");eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(30)","body \x3e nav \x3e div \x3e a:nth-child(30)");eventClick("Footer","Programa\u00e7\u00e3o","body \x3e nav \x3e div \x3e a:nth-child(31)","body \x3e nav \x3e div \x3e a:nth-child(31)");eventClick("Footer","Front-end","body \x3e nav \x3e div \x3e a:nth-child(33)","body \x3e nav \x3e div \x3e a:nth-child(33)");
eventClick("Footer","Front-end","body \x3e nav \x3e div \x3e a:nth-child(34)","body \x3e nav \x3e div \x3e a:nth-child(34)");eventClick("Footer","Front-end","body \x3e nav \x3e div \x3e a:nth-child(35)","body \x3e nav \x3e div \x3e a:nth-child(35)");eventClick("Footer","Front-end","body \x3e nav \x3e div \x3e a:nth-child(36)","body \x3e nav \x3e div \x3e a:nth-child(36)");eventClick("Footer","Front-end","body \x3e nav \x3e div \x3e a:nth-child(37)","body \x3e nav \x3e div \x3e a:nth-child(37)");
eventClick("Footer","Front-end","body \x3e nav \x3e div \x3e a:nth-child(38)","body \x3e nav \x3e div \x3e a:nth-child(38)");eventClick("Footer","Front-end","body \x3e nav \x3e div \x3e a:nth-child(39)","body \x3e nav \x3e div \x3e a:nth-child(39)");eventClick("Footer","Front-end","body \x3e nav \x3e div \x3e a:nth-child(40)","body \x3e nav \x3e div \x3e a:nth-child(40)");eventClick("Footer","Front-end","body \x3e nav \x3e div \x3e a:nth-child(41)","body \x3e nav \x3e div \x3e a:nth-child(41)");
eventClick("Footer","Front-end","body \x3e nav \x3e div \x3e a:nth-child(42)","body \x3e nav \x3e div \x3e a:nth-child(42)");eventClick("Footer","Front-end","body \x3e nav \x3e div \x3e a:nth-child(43)","body \x3e nav \x3e div \x3e a:nth-child(43)");eventClick("Footer","Infraestrutura","body \x3e nav \x3e div \x3e a:nth-child(45)","body \x3e nav \x3e div \x3e a:nth-child(45)");eventClick("Footer","Infraestrutura","body \x3e nav \x3e div \x3e a:nth-child(46)","body \x3e nav \x3e div \x3e a:nth-child(46)");
eventClick("Footer","Infraestrutura","body \x3e nav \x3e div \x3e a:nth-child(47)","body \x3e nav \x3e div \x3e a:nth-child(47)");eventClick("Footer","Infraestrutura","body \x3e nav \x3e div \x3e a:nth-child(48)","body \x3e nav \x3e div \x3e a:nth-child(48)");eventClick("Footer","Infraestrutura","body \x3e nav \x3e div \x3e a:nth-child(49)","body \x3e nav \x3e div \x3e a:nth-child(49)");eventClick("Footer","Infraestrutura","body \x3e nav \x3e div \x3e a:nth-child(50)","body \x3e nav \x3e div \x3e a:nth-child(50)");
eventClick("Footer","Infraestrutura","body \x3e nav \x3e div \x3e a:nth-child(51)","body \x3e nav \x3e div \x3e a:nth-child(51)");eventClick("Footer","Infraestrutura","body \x3e nav \x3e div \x3e a:nth-child(52)","body \x3e nav \x3e div \x3e a:nth-child(52)");eventClick("Footer","Infraestrutura","body \x3e nav \x3e div \x3e a:nth-child(53)","body \x3e nav \x3e div \x3e a:nth-child(53)");eventClick("Footer","Infraestrutura","body \x3e nav \x3e div \x3e a:nth-child(54)","body \x3e nav \x3e div \x3e a:nth-child(54)");
eventClick("Footer","Infraestrutura","body \x3e nav \x3e div \x3e a:nth-child(55)","body \x3e nav \x3e div \x3e a:nth-child(55)");eventClick("Footer","Design \x26 UX","body \x3e nav \x3e div \x3e a:nth-child(57)","body \x3e nav \x3e div \x3e a:nth-child(57)");eventClick("Footer","Design \x26 UX","body \x3e nav \x3e div \x3e a:nth-child(58)","body \x3e nav \x3e div \x3e a:nth-child(58)");eventClick("Footer","Design \x26 UX","body \x3e nav \x3e div \x3e a:nth-child(59)","body \x3e nav \x3e div \x3e a:nth-child(59)");
eventClick("Footer","Design \x26 UX","body \x3e nav \x3e div \x3e a:nth-child(60)","body \x3e nav \x3e div \x3e a:nth-child(60)");eventClick("Footer","Design \x26 UX","body \x3e nav \x3e div \x3e a:nth-child(61)","body \x3e nav \x3e div \x3e a:nth-child(61)");eventClick("Footer","Design \x26 UX","body \x3e nav \x3e div \x3e a:nth-child(62)","body \x3e nav \x3e div \x3e a:nth-child(62)");eventClick("Footer","Design \x26 UX","body \x3e nav \x3e div \x3e a:nth-child(63)","body \x3e nav \x3e div \x3e a:nth-child(63)");
eventClick("Footer","Design \x26 UX","body \x3e nav \x3e div \x3e a:nth-child(64)","body \x3e nav \x3e div \x3e a:nth-child(64)");eventClick("Footer","Design \x26 UX","body \x3e nav \x3e div \x3e a:nth-child(65)","body \x3e nav \x3e div \x3e a:nth-child(65)");eventClick("Footer","Design \x26 UX","body \x3e nav \x3e div \x3e a:nth-child(66)","body \x3e nav \x3e div \x3e a:nth-child(66)");eventClick("Footer","Design \x26 UX","body \x3e nav \x3e div \x3e a:nth-child(67)","body \x3e nav \x3e div \x3e a:nth-child(67)");
eventClick("Footer","Business","body \x3e nav \x3e div \x3e a:nth-child(69)","body \x3e nav \x3e div \x3e a:nth-child(69)");eventClick("Footer","Business","body \x3e nav \x3e div \x3e a:nth-child(70)","body \x3e nav \x3e div \x3e a:nth-child(70)");eventClick("Footer","Business","body \x3e nav \x3e div \x3e a:nth-child(71)","body \x3e nav \x3e div \x3e a:nth-child(71)");eventClick("Footer","Business","body \x3e nav \x3e div \x3e a:nth-child(72)","body \x3e nav \x3e div \x3e a:nth-child(72)");
eventClick("Footer","Business","body \x3e nav \x3e div \x3e a:nth-child(73)","body \x3e nav \x3e div \x3e a:nth-child(73)");eventClick("Footer","Business","body \x3e nav \x3e div \x3e a:nth-child(74)","body \x3e nav \x3e div \x3e a:nth-child(74)");eventClick("Footer","Business","body \x3e nav \x3e div \x3e a:nth-child(75)","body \x3e nav \x3e div \x3e a:nth-child(75)");eventClick("Footer","Business","body \x3e nav \x3e div \x3e a:nth-child(76)","body \x3e nav \x3e div \x3e a:nth-child(76)");
eventClick("Footer","Business","body \x3e nav \x3e div \x3e a:nth-child(77)","body \x3e nav \x3e div \x3e a:nth-child(77)");eventClick("Footer","Business","body \x3e nav \x3e div \x3e a:nth-child(78)","body \x3e nav \x3e div \x3e a:nth-child(78)");eventClick("Footer","Business","body \x3e nav \x3e div \x3e a:nth-child(79)","body \x3e nav \x3e div \x3e a:nth-child(79)");eventClick("Footer","Business","body \x3e nav \x3e div \x3e a:nth-child(80)","body \x3e nav \x3e div \x3e a:nth-child(80)");
eventClick("Footer","Business","body \x3e nav \x3e div \x3e a:nth-child(81)","body \x3e nav \x3e div \x3e a:nth-child(81)");eventClick("Footer","Business","body \x3e nav \x3e div \x3e a:nth-child(82)","body \x3e nav \x3e div \x3e a:nth-child(82)");</script>
<style type="text/css">.vjs-control.vjs-HD-button { color: #36D8DE; font-weight:bold; text-shadow: 0 0 1em #fff;}</style></body></html>